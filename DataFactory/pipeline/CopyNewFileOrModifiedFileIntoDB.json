{
	"name": "CopyNewFileOrModifiedFileIntoDB",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "maintainableItem1",
						"type": "DatasetReference",
						"parameters": {
							"containername": {
								"value": "@pipeline().parameters.container",
								"type": "Expression"
							},
							"foldername": {
								"value": "@pipeline().parameters.folder",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"modifiedDatetimeStart": {
							"value": "@pipeline().parameters.LastModified_From",
							"type": "Expression"
						},
						"modifiedDatetimeEnd": {
							"value": "@pipeline().parameters.LastModified_To",
							"type": "Expression"
						}
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEachFiles",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childitems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": "drop table @pipeline().parameters.schema.@replace(item().name,'.csv','')",
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "dimFiles1",
									"type": "DatasetReference",
									"parameters": {
										"containerpm": {
											"value": "@pipeline().parameters.container",
											"type": "Expression"
										},
										"folderpm": {
											"value": "@pipeline().parameters.folder",
											"type": "Expression"
										},
										"filepm": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureSqlTableEdpVse1",
									"type": "DatasetReference",
									"parameters": {
										"schemaname": {
											"value": "@pipeline().parameters.schema",
											"type": "Expression"
										},
										"tablename": {
											"value": "@replace(item().name,'.csv','')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"container": {
				"type": "string",
				"defaultValue": "cacc"
			},
			"folder": {
				"type": "string",
				"defaultValue": "dim"
			},
			"schema": {
				"type": "string",
				"defaultValue": "dbo"
			},
			"LastModified_From": {
				"type": "string",
				"defaultValue": "2020-07-04T21:00:00Z"
			},
			"LastModified_To": {
				"type": "string",
				"defaultValue": "2020-07-04T23:00:00Z"
			}
		},
		"annotations": []
	}
}